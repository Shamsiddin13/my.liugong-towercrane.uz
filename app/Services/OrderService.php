<?php

namespace App\Services;

use App\Models\Order;
use App\Models\OrderItem;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Log;
use Throwable;

class OrderService
{
    /**
     * Create a new order with its items.
     *
     * @param array $data The data for creating the order and order items.
     *                    Expected format: [
     *                        'customer_name' => 'John Doe',
     *                        'customer_phone' => '1234567890',
     *                        'customer_email' => 'john.doe@example.com',
     *                        'delivery_address' => '123 Main St, Anytown',
     *                        'payment_method' => 'cash_on_delivery',
     *                        'notes' => 'Optional notes here.',
     *                        'total_sum' => 150.00, // Total sum of the order
     *                        'purchase_sum' => 140.00, // Sum of items before discounts/shipping
     *                        'discount_amount' => 10.00, // Optional discount
     *                        'shipping_cost' => 0.00, // Optional shipping cost
     *                        'landing_id' => 1, // Optional: ID of the landing page
     *                        'landing_post_id' => 1, // Optional: ID of the landing post
     *                        'order_items' => [
     *                            [
     *                                'product_id' => 1,
     *                                'quantity' => 2,
     *                                'price' => 50.00,
     *                                'total_price' => 100.00
     *                            ],
     *                            [
     *                                'product_id' => 2,
     *                                'quantity' => 1,
     *                                'price' => 40.00,
     *                                'total_price' => 40.00
     *                            ]
     *                        ]
     *                    ]
     * @return Order The created order.
     * @throws Throwable If the order creation fails.
     */
    public function createOrder(array $data): Order
    {
        return DB::transaction(function () use ($data) {
            try {
                // Create the Order
                $order = Order::query()->create([
                    'full_name' => $data['full_name'],
                    'phone' => $data['phone'],
                    'region' => $data['region'] ?? null,
                    'status' => 'new', // Default status
                    'total_sum' => $data['total_sum'],
                    'purchase_sum' => $data['purchase_sum'],
                    'discount_amount' => $data['discount_amount'] ?? 0.00,
                    'shipping_cost' => $data['shipping_cost'] ?? 0.00,
                    'landing_id' => $data['landing_id'] ?? null,
                    'landing_post_id' => $data['landing_post_id'] ?? null,
                    // 'orderId' will be generated by the database sequence or a model event if set up
                ]);

                // Create OrderItems
                if (!empty($data['order_items'])) {
                    foreach ($data['order_items'] as $itemData) {
                        OrderItem::create([
                            'order_db_id' => $order->id,
                            'product_id' => $itemData['product_id'],
                            'quantity' => $itemData['quantity'],
                            'price' => $itemData['price'],
                            'total_price' => $itemData['total_price'],
                        ]);
                    }
                }

                return $order;
            } catch (Throwable $e) {
                Log::error('Order creation failed: ' . $e->getMessage(), [
                    'data' => $data,
                    'trace' => $e->getTraceAsString()
                ]);
                // Re-throw the exception to ensure the transaction is rolled back
                // and the caller is aware of the failure.
                throw $e;
            }
        });
    }
}
